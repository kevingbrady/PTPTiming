; /etc/ptpd.conf
; ==============================================================================
; This is a recommended configuration for a PTPv2 slave
; For a full list of options run ptpd2 -H or see the documentation and man pages
; ==============================================================================

; interface has to be specified
ptpengine:interface=eth0

; PTP domain
ptpengine:domain=0

; available presets are slaveonly, masteronly and masterslave (full IEEE 1588 implementation)
ptpengine:preset=slaveonly

; multicast for both sync and delay requests - use hybrid for unicast delay requests
ptpengine:ip_mode=multicast

; when enabled, instead of sockets, libpcap is used to receive (sniff) and send (inject) packets.
; on low latency hardware such as 10GE NICs this can provide results close to hardware-assisted PTP
;ptpengine:use_libpcap=y

; Specify latency correction (nanoseconds) for incoming packets.
ptpengine:inbound_latency = 0

; Specify latency correction (nanoseconds) for outgoing packets.
ptpengine:outbound_latency = 0


; go into panic mode for 10 minutes instead of resetting the clock
;ptpengine:panic_mode=y
;ptpengine:panic_mode_duration=10

; uncomment this to enable outlier filters
ptpengine:sync_outlier_filter_enable=y
ptpengine:delay_outlier_filter_enable=y

; Maximum absolute frequency shift which can be applied to the clock servo
; when slewing the clock. Expressed in parts per million (1 ppm = shift of
; 1 us per second. Values above 512 will use the tick duration correction
; to allow even faster slewing. Default maximum is 512 without using tick.
;clock:max_offset_ppm = 500

; Observed drift handling method between servo restarts:
; reset: set to zero (not recommended)
; preserve: use kernel value,
; file: load/save to drift file on startup/shutdown, use kernel
; value inbetween. To specify drift file, use the clock:drift_file setting.
; Options: reset preserve file 
clock:drift_handling = preserve

; Specify drift file
;clock:drift_file=/etc/ptp/ptpd2_kernelclock.drift

;Do not adjust system clock
;clock:no_adjust=y

;dump contents of every packet received
;global:dump_packets=y

; Enable / disable writing status information to file.
global:log_status=y

; File used to log ptpd2 status information.
global:status_file=/etc/ptp/status.txt

;Status file update interval in seconds.
global:status_update_interval=1

; log file, event log only. if timing statistics are needed, see statistics_file
global:log_file=/var/log/ptpd2.log

; log file up to 5M
global:log_file_max_size=5000

; no rotation of log
global:log_file_max_files=0

; truncate log file every time service restarts
global:log_file_truncate=y

; required if ip_mode is set to hybrid
;ptpengine:log_delayreq_interval=0

;Run in foreground with statistics and all messages logged to stdout.
;Overrides log file and statistics file settings and disables syslog.
;global:verbose_foreground=y


;Log timing statistics for every PTP packet received
;global:log_statistics=y

;Truncate the statistics file every time it is (re) opened: startup and SIGHUP
;global:statistics_file_truncate=y

; uncomment this to log a timing log like in previous ptpd versions
;global:statistics_file="/etc/ptp/ptpd2_stats.txt"
;global:statistics_file="/var/lof/ptpd2.log

;Clock synchronisation statistics update interval in seconds
;global:statistics_update_interval=1

; wait 5 statistics intervals for one-way delay to stabilise
;ptpengine:calibration_delay=5

;limit stats file to 10000 kB
;global:statistics_file_max_size=10000

; update online statistics every second
;global:statistics_log_interval=1


;Timestamp format used when logging timing statistics
;datetime - formatttted date and time: YYYY-MM-DD hh:mm:ss.uuuuuu
;unix - Unix timestamp with nanoseconds: s.ns
;both - Formatted date and time, followed by unix timestamp (adds one extra field  to the log)
;global:statistics_timestamp_format = unix

; on multi-core systems it is recommended to bind ptpd to a single core
global:cpuaffinity_cpucore=0

; use DSCP 46 for expedited forwarding over ipv4 networks
ptpengine:ip_dscp=46

; Enable NTPd integration
ntpengine:enabled = y

; Enable control over local NTPd daemon
;ntpengine:control_enabled = y

; NTP control check interval in seconds
; 
;ntpengine:check_interval = 15

; NTP key number - must be configured as a trusted control key in ntp.conf,
; and be non-zero for the ntpengine:control_enabled setting to take effect.
; 
;ntpengine:key_id = 1

; NTP key (plain text, max. 20 characters) - must match the key configured in
; ntpd's keys file, and must be non-zero for the ntpengine:control_enabled
; setting to take effect.
; 
;ntpengine:key = raspberry

; Fail over to NTP when PTP time sync not available - requires
; ntpengine:enabled but does not require the rest of NTP configuration
; - will warn instead of failing over if cannot control ntpd.
;ptpengine:ntp_failover = N

; NTP failover timeout in seconds: time between PTP slave going into
; LISTENING state, and failing over to NTP. 0 = fail over immediately.
;ptpengine:ntp_failover_timeout = 60

; Prefer NTP time synchronisation when not controlling the clock (all
; states, including slave when clock:no_adjust set)
;ptpengine:prefer_ntp = N

; always keep a new line in the end

